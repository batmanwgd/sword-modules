<project name="Build ISV" basedir="." default="main">

	<property name="src.dir"     value="src;../SwordModuleCreation/src"/>

	<property name="build.dir"   value="build"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="module.dir"  value="${build.dir}/module"/>
	<property name="mods.d.dir" value="module/mods.d"/>

	<property name="distribution.dir"  value="${build.dir}/distribution"/>
	<property name="tar.gz.dir"  value="${build.dir}/tar.gz"/>

	<property name="main-class"  value="org.andbible.modules.isv.SMakeISV"/>

	<property name="lib.dir"     value="libs"/>
	<property name="andbible.lib.dir"  value="../../and-bible/AndBible/libs"/>

	<property name="osis2mod"     location="C:/Program Files/CrossWire/sword-utilities-1.6.2/osis2mod"/>
	<property name="xml2gbs"     location="C:/Program Files/CrossWire/sword-utilities-1.6.2/xml2gbs"/>
	<property name="adb"     location="C:/datafiles/android-sdk-windows/platform-tools/adb"/>

	<property name="sword.dir"     location="C:/Program Files/CrossWire/The SWORD Project"/>
	
	<property environment="env" />
	<property name="scala.home" value="${env.SCALA_HOME}"/>

	<path id="classpath">
		<pathelement location="${classes.dir}"/>
		<fileset dir="${lib.dir}" includes="**/*.jar"/>
		<pathelement location="${scala.home}/lib/scala-library.jar"/>
	</path>

	<property name="module.name"     value="ISV"/>
	<property name="module.name.lower" value="isv"/>
	<property name="module.zipfile"  value="${module.name}.zip"/>
	<property name="sword.module.folder" value="modules/texts/ztext/${module.name.lower}"/>

	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${scala.home}/lib/scala-compiler.jar" />
			<pathelement location="${scala.home}/lib/scala-library.jar" />
		</classpath>
	</taskdef>
	
	<target name="clean">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${module.dir}"/>
		<mkdir dir="${distribution.dir}"/>
		<mkdir dir="${tar.gz.dir}"/>
	</target>
	<!--
    	To create a compressed one I do: 
    	        mkdir -p modules/texts/ztext/kjv2006 
    	        osis2mod modules/texts/ztext/kjv2006 kjv.xml 0 2 4 
    	        zip kjv2006.zip mods.d/kjv2006.conf modules/texts/ztext/kjv2006/*
    	        http://sword-dev.350566.n4.nabble.com/Create-a-module-Where-is-xml2gbs-td351447.html 
-->

	<target name="compile">
		<javac srcdir="../SwordModuleCreation/src" destdir="${classes.dir}" classpathref="classpath"/>
	</target>

	<target name="scompile">
		<scalac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" force="changed">
			<include name="**/*.scala"/>
			<include name="../SwordModuleCreation/src/**/*.java"/>
			<include name="**/*.java"/>
		</scalac>

		<javac srcdir="../SwordModuleCreation/src" destdir="${classes.dir}" classpathref="classpath"/>
	</target>

	<target name="prepare-xml" depends="scompile">
		<java classname="${main-class}" fork="true">
			<classpath>
				<path refid="classpath"/>
			</classpath>
		</java>
	</target>

	<target name="osis2mod">
		<exec executable="${osis2mod}">
			<arg value="${module.dir}"/>
			<arg value="${module.name}.xml"/>
			<arg value="-z"/>
		</exec>
	</target>

	<target name="zip-module" depends="osis2mod">
		<zip destfile="${distribution.dir}/${module.zipfile}" filesonly="true">
			<zipfileset dir="${module.dir}" prefix="${sword.module.folder}"/>
			<zipfileset dir="${mods.d.dir}" prefix="mods.d"/>
		</zip>
	</target>

	<target name="tar-gz-mods">
		<tar destfile="${tar.gz.dir}/mods.d.tar">
			<zipfileset dir="${mods.d.dir}" prefix="mods.d"/>
		</tar>
		<gzip destfile="${tar.gz.dir}/mods.d.tar.gz" src="${tar.gz.dir}/mods.d.tar"/>
	</target>

	<target name="adb-push" depends="osis2mod">
		<exec executable="${adb}">
			<arg value="push"/>
			<arg path="build/module/" />
			<arg value="/mnt/sdcard/jsword/modules/texts/ztext/${module.name.lower}"/>
		</exec>
		<exec executable="${adb}">
			<arg value="push"/>
			<arg path="module/mods.d/${module.name.lower}.conf" />
			<arg value="/mnt/sdcard/jsword/mods.d"/>
		</exec>
	</target>

	<target name="copy_to_sword_test_folder">
		<copy file="module/mods.d/${module.name.lower}.conf" todir="${sword.dir}/mods.d"/>
		<copy todir="${sword.dir}/modules/texts/ztext/${module.name.lower}">
			<fileset dir="build/module" includes="*.*"/>
		</copy>
	</target>
	
	<target name="clean-build" depends="clean,scompile"/>

	<target name="main" depends="clean, prepare-xml, osis2mod, zip-module, adb-push, copy_to_sword_test_folder"/>

	<target name="jar" depends="scompile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>
	</target>

</project>